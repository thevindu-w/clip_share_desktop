name: Build-and-Test
run-name: Build and Test on ${{ github.sha }}

on:
  push:
    branches:
    - master
    paths:
    - 'src/**'
    - '!src/res/**'
    - 'src/res/**/*.c'
    - 'src/res/**/*.h'
    - 'tests/**'
    - 'Makefile'
    - 'docker/*'
    - '.github/workflows/build-test.yml'
  pull_request:
    branches:
    - master
  workflow_call:
    inputs:
      trigger:
        type: string
        required: false
        default: workflow_call

jobs:
  Style-Check:
    uses: ./.github/workflows/check-style.yml
    with:
      trigger: "${{ inputs.trigger || github.event_name }}"
    permissions:
      contents: write
      pull-requests: write

  Test-on-Linux:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: Style-Check

    strategy:
      matrix:
        distro:
        - ubuntu
        - fedora
        - arch
        exclude:
        - distro: ${{ (github.event_name == 'push') && (inputs.trigger != 'workflow_call') && 'fedora' }}
        - distro: ${{ (github.event_name == 'push') && (inputs.trigger != 'workflow_call') && 'arch' }}

    steps:
    - name: Check out repository code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.ref }}

    - name: Build
      run: docker build -t clipshare -f docker/Dockerfile --build-arg "DISTRO=${{matrix.distro}}" .

    - name: Test
      run: docker run clipshare

  Test-on-Windows:
    runs-on: windows-latest
    timeout-minutes: 10
    needs: Style-Check

    defaults:
      run:
        shell: msys2 {0}

    steps:
    - name: Setup MSYS2
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: false
        install: >-
          mingw-w64-x86_64-gcc
          mingw-w64-x86_64-libunistring
          make
          python
          diffutils
          sed
          vim
          unzip

    - name: Set libmicrohttpd path
      run: |
        LIBMICROHTTPD_PATH=/c/msys64/libmicrohttpd-x86_64
        echo LIBMICROHTTPD_PATH="$LIBMICROHTTPD_PATH" >> "$GITHUB_ENV"
        echo CPATH="${LIBMICROHTTPD_PATH}/include" >> "$GITHUB_ENV"
        echo LIBRARY_PATH="${LIBMICROHTTPD_PATH}/lib" >> "$GITHUB_ENV"

    - name: Setup libmicrohttpd
      id: cache-libmicrohttpd
      uses: actions/cache@v4
      with:
        path: C:\msys64\libmicrohttpd-x86_64
        key: libmicrohttpd-windows-x86_64

    - name: Download libmicrohttpd
      if: ${{ steps.cache-libmicrohttpd.outputs.cache-hit != 'true' }}
      run: |
        curl -OL https://ftpmirror.gnu.org/libmicrohttpd/libmicrohttpd-latest-w32-bin.zip
        unzip libmicrohttpd-latest-w32-bin.zip
        mv libmicrohttpd-*-w32-bin/x86_64/MinGW/static/mingw64 "$LIBMICROHTTPD_PATH"
        rm -rf libmicrohttpd-latest-w32-bin.zip libmicrohttpd-*-w32-bin

    - name: Check out repository code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.ref }}

    - name: Build
      run: make

    - name: Test
      run: make test
